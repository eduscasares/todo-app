[{"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/index.js":"1","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/App.js":"2","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/reportWebVitals.js":"3","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/routes/MainRoutes.jsx":"4","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/auth/LoginPage.jsx":"5","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/auth/SignupPage.jsx":"6","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/profile/ProfilePage.jsx":"7","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/home/HomePage.jsx":"8","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/dashboard/Dashboard.jsx":"9","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/about/AboutPage.jsx":"10","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/tasks/TasksPage.jsx":"11","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/404/NotFound.jsx":"12","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/containers/NavBar.jsx":"13","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/containers/TaskList.jsx":"14","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/forms/LoginForm.jsx":"15","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/Task.jsx":"16","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/forms/TaskForm.jsx":"17","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/models/taskModel.class.js":"18","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/models/levels.enum.js":"19"},{"size":714,"mtime":1663874603602,"results":"20","hashOfConfig":"21"},{"size":275,"mtime":1664704439534,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1663433185254,"results":"23","hashOfConfig":"21"},{"size":2546,"mtime":1663866734262,"results":"24","hashOfConfig":"21"},{"size":231,"mtime":1663591327734,"results":"25","hashOfConfig":"21"},{"size":168,"mtime":1663433185220,"results":"26","hashOfConfig":"21"},{"size":170,"mtime":1663433185251,"results":"27","hashOfConfig":"21"},{"size":161,"mtime":1663513597285,"results":"28","hashOfConfig":"21"},{"size":168,"mtime":1663433185221,"results":"29","hashOfConfig":"21"},{"size":1030,"mtime":1663516707283,"results":"30","hashOfConfig":"21"},{"size":259,"mtime":1663882746223,"results":"31","hashOfConfig":"21"},{"size":178,"mtime":1663433185150,"results":"32","hashOfConfig":"21"},{"size":1442,"mtime":1663866996091,"results":"33","hashOfConfig":"21"},{"size":5010,"mtime":1664711827115,"results":"34","hashOfConfig":"21"},{"size":830,"mtime":1663591487825,"results":"35","hashOfConfig":"21"},{"size":2330,"mtime":1664704938430,"results":"36","hashOfConfig":"21"},{"size":4227,"mtime":1663882465304,"results":"37","hashOfConfig":"21"},{"size":341,"mtime":1664709271588,"results":"38","hashOfConfig":"21"},{"size":95,"mtime":1663433185148,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hwwi4s",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/index.js",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/App.js",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/reportWebVitals.js",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/routes/MainRoutes.jsx",["101","102","103"],[],"import React from 'react';\n\n// Importing components\nimport HomePage from '../pages/home/HomePage';\nimport LoginPage from '../pages/auth/LoginPage';\nimport Dashboard from '../pages/dashboard/Dashboard';\nimport NotFound from '../pages/404/NotFound';\nimport SignupPage from '../pages/auth/SignupPage';\nimport ProfilePage from '../pages/profile/ProfilePage';\nimport NavBar from '../components/containers/NavBar';\nimport AboutPage from '../pages/about/AboutPage';\n\n// Importing Route system\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate, useNavigate } from 'react-router-dom';\nimport TasksPage from '../pages/tasks/TasksPage';\n\nconst MainRoutes = () => {\n\n    let loggedIn = true;\n    let signedIn = false;\n\n    return (\n        <main>\n            <Router>\n\n                <NavBar></NavBar>\n\n                <Routes className='navigation'>\n                \n                    <Route exact path='/' element={\n                        loggedIn ? \n                            ( <Navigate replace to={'/dashboard'} /> ) :\n                            ( <Navigate replace to={'/login'} /> )\n                    } /> \n\n                    <Route exact path='/login' element={ \n                        loggedIn ?\n                            ( <Navigate replace to={'/profile'} /> ) :\n                            ( <LoginPage /> )\n                    } /> \n                    <Route exact path='/sign-up' element={ \n                        !signedIn ? \n                            ( <SignupPage /> ) :\n                            ( <Navigate replace to={'/login'} /> )\n                    } /> \n\n                    <Route exact path='/dashboard' element={\n                        loggedIn ? \n                            ( <Dashboard /> ) : \n                            ( <Navigate replace to={'/login'} /> )\n                    } />\n\n                    <Route exact path='/profile' element={\n                        loggedIn ?\n                            ( <ProfilePage /> ) :\n                            ( <Navigate replace to={'/login'} /> )\n                    } />\n\n                    <Route exact path='/tasks' element={\n                        loggedIn ?\n                            ( <TasksPage /> ) :\n                            ( <Navigate replace to='/login' /> )\n                    } />\n\n                    <Route path='/about' element={< AboutPage />} />\n\n                    <Route path='*' element={ <NotFound /> } />\n\n                </Routes>\n\n            </Router>\n        </main>\n    );\n}\n\nexport default MainRoutes;\n","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/auth/LoginPage.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/auth/SignupPage.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/profile/ProfilePage.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/home/HomePage.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/dashboard/Dashboard.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/about/AboutPage.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/tasks/TasksPage.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/pages/404/NotFound.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/containers/NavBar.jsx",["104","105"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => {\n\n    const [status, setStatus] = useState(false);\n    let loggedIn = true;\n\n    return (\n        <aside className='navbar'>\n            \n            <div className=\"logo\">\n                <h1>/NRDL TASKS</h1>\n            </div>\n\n            { loggedIn ? \n\n                <nav>\n                    <Link to={'/tasks'}>Tasks</Link>\n                    <Link to={'/about'}>About</Link>\n                </nav> :  \n\n                null    \n\n            }\n\n            {\n                loggedIn ? \n\n                    <div>\n                        <Link to={'/profile'} className=\"session-hanlder logged-out\">\n                            <img src=\"https://images.unsplash.com/photo-1603415526960-f7e0328c63b1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\" alt=\"Avatar\" />\n                                Usuario prueba\n                        </Link> \n                    </div>:\n\n                    <div>\n                        <div className=\"session-hanlder\">\n                            <Link to={'/sign-up'}> \n                                <button className='contained-button'>Sign up</button>\n                            </Link>\n                        </div>  \n                    </div>\n\n\n                   \n            }\n\n        </aside>\n    );\n}\n\nexport default NavBar;\n","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/containers/TaskList.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/forms/LoginForm.jsx",["106"],[],"import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport '../../../styles/login-form.scss';\n\nconst LoginForm = () => {\n    return (\n        <div>\n            <Formik>\n\n                <Form className='login-form'>\n\n                    <h1>Login</h1>\n                    <h2>and start putting your stuff in order!</h2>\n                    <p>Please, enter you email and password to do login</p>\n\n                    <Field type=\"email\" name=\"email\" id=\"email\" placeholder=\"example@mail.com\" />\n\n                    <Field  type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\"/>\n\n                    <button type='submit' className='contained-button'>Log in</button>\n\n                </Form>\n            </Formik>\n        </div>\n    );\n}\n\nexport default LoginForm;\n","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/Task.jsx",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/forms/TaskForm.jsx",["107"],[],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Importing MODELS \nimport { Task } from '../../../models/taskModel.class';\nimport { LEVELS } from '../../../models/levels.enum';\n\n// Importing Formik and Yup\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst TaskForm = ({ add, length, visibility, handleClose }) => {\n\n    // Setting Form initial values\n    const initialValues = {\n        name: '',\n        description: '',\n        level: LEVELS.NORMAL,\n        completed: false\n    }\n\n    // Setting Form validation\n    const addTaskSchema = Yup.object().shape(\n        {\n            name: Yup.string()\n                .required('This field is required, please fill it'),\n            description: Yup.string()\n                .required('This field is required, please fill it'),\n            level: Yup.string().oneOf(\n                [LEVELS.NORMAL, LEVELS.URGENT, LEVELS.BLOCKING]\n            ),\n        }\n    )\n\n    // Functionality to add task\n\n    function addTask(tasks) {\n        const newTask = tasks;\n        add(newTask);\n        handleClose();\n    }\n\n    \n    return (\n        <div className={ visibility === true ? 'form-container' : 'form-container hidden'}>\n            <div className='task-form'>\n                <i className=\"bi bi-x-circle-fill\" onClick={ handleClose }></i>\n                <h4>Add a new task</h4>\n\n                <Formik\n                    initialValues = { initialValues }\n                    validationSchema = { addTaskSchema }\n                    onSubmit = { (values, actions) => {\n                        addTask(values);\n                        actions.resetForm({});\n                        actions.setSubmitting(false);\n                    } }\n                >\n\n                    {({ errors,\n                        touched, \n                        isSubmitting }) => (\n\n                            <Form>\n\n                                <label htmlFor=\"name\">Name</label>\n                                <Field type=\"text\" id=\"name\" name=\"name\" placeholder=\"Add a task name\"></Field>\n                                {/* Setting Field Errors */}\n                                    {\n\n                                        errors.name && touched.name &&\n                                        (\n                                            <ErrorMessage name=\"name\" component=\"div\" />\n                                        )\n\n                                    }\n\n                                <label htmlFor=\"description\">Description</label>\n                                <Field type=\"text\" id=\"description\" name=\"description\" placeholder=\"Add a task description\"></Field>\n                                {/* Setting Field Errors */}\n                                    {\n\n                                        errors.description && touched.description &&\n                                        (\n                                            <ErrorMessage name='description' component='div'></ErrorMessage>\n                                        )\n\n                                    }\n\n                                <label htmlFor=\"level\">Priority</label>\n                                <Field as='select' id=\"level\" name=\"level\">\n                                    <option value={ LEVELS.NORMAL }>Normal</option>\n                                    <option value={ LEVELS.URGENT }>Urgent</option>\n                                    <option value={ LEVELS.BLOCKING }>Blocking</option>\n                                </Field>\n\n                                <button type=\"submit\" className='contained-button'>\n                                    { length === 0 ? 'Create your first task' : 'Add a new task'}\n                                </button>\n\n                                { isSubmitting ? (<p>Be patient, we're adding your task</p>) : null }\n\n                            </Form>\n\n                        )\n                    }\n\n\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\nTaskForm.ProtoTypes = {\n    tasks: PropTypes.instanceOf(Task),\n    add: PropTypes.func.isRequired,\n    length: PropTypes.number.isRequired,\n}\n\nexport default TaskForm;\n","/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/models/taskModel.class.js",[],[],"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/models/levels.enum.js",[],[],{"ruleId":"108","severity":1,"message":"109","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":16},{"ruleId":"108","severity":1,"message":"112","line":14,"column":50,"nodeType":"110","messageId":"111","endLine":14,"endColumn":54},{"ruleId":"108","severity":1,"message":"113","line":14,"column":66,"nodeType":"110","messageId":"111","endLine":14,"endColumn":77},{"ruleId":"108","severity":1,"message":"114","line":6,"column":12,"nodeType":"110","messageId":"111","endLine":6,"endColumn":18},{"ruleId":"108","severity":1,"message":"115","line":6,"column":20,"nodeType":"110","messageId":"111","endLine":6,"endColumn":29},{"ruleId":"108","severity":1,"message":"116","line":3,"column":13,"nodeType":"110","messageId":"111","endLine":3,"endColumn":16},{"ruleId":"108","severity":1,"message":"117","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useNavigate' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'Yup' is defined but never used.","'useState' is defined but never used."]
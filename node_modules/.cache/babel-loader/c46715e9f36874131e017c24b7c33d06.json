{"ast":null,"code":"var _jsxFileName = \"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/pure/Task.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //Bringing MODELS to component\n\nimport { TaskModel } from '../../models/taskModel.class';\nimport { LEVELS } from '../../models/levels.enum'; //Bringing STYLES to Component\n\nimport '../../styles/tasks.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  let {\n    task,\n    complete,\n    remove\n  } = _ref;\n\n  /**\n   * @return La idea es que la funci贸n retorne un badge \n   * dependiendo del nivel de prioridad de la task\n   */\n  function taskLevelBadge() {\n    switch (task.level) {\n      case LEVELS.NORMAL:\n        return /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-primary\",\n            children: task.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this);\n\n      case LEVELS.URGENT:\n        return /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-warning\",\n            children: task.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this);\n\n      case LEVELS.BLOCKING:\n        return /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"mb-0\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-danger\",\n            children: task.level\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this);\n\n      default:\n        break;\n    }\n  }\n  /**\n   * @returns Esta funci贸n devuelve el tipo de icono que se debe mostrar\n   * dependiendo del estado de la tarea { task.completed }\n   */\n\n\n  function taskIconCompleted() {\n    if (task.completed) {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => complete(task),\n        className: \"bi-toggle-on task-action\",\n        style: {\n          color: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: () => complete(task),\n        className: \"bi-toggle-off task-action\",\n        style: {\n          color: 'gray'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  const taskCompleted = {\n    color: 'gray',\n    textDecoration: 'line-through'\n  };\n  const taskPending = {\n    color: 'tomato',\n    fontWeight: 'normal'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: taskLevelBadge()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), taskIconCompleted(), /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: () => remove(task),\n      className: \"bi-trash task-action\",\n      style: {\n        color: 'tomato'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Task;\nTask.propTypes = {\n  task: PropTypes.object.isRequired,\n  complete: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired\n};\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","PropTypes","TaskModel","LEVELS","Task","task","complete","remove","taskLevelBadge","level","NORMAL","URGENT","BLOCKING","taskIconCompleted","completed","color","taskCompleted","textDecoration","taskPending","fontWeight","name","description","propTypes","object","isRequired","func"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/pure/Task.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n//Bringing MODELS to component\nimport { TaskModel } from '../../models/taskModel.class';\nimport { LEVELS } from '../../models/levels.enum';\n\n//Bringing STYLES to Component\nimport '../../styles/tasks.scss'\n\nconst Task = ({ task, complete, remove }) => {\n\n    /**\n     * @return La idea es que la funci贸n retorne un badge \n     * dependiendo del nivel de prioridad de la task\n     */\n     function taskLevelBadge() {\n        switch (task.level) {\n            case LEVELS.NORMAL:\n                return(\n                    <h6 className=\"mb-0\"><span className='badge bg-primary'>{ task.level }</span></h6>\n                )\n        \n            case LEVELS.URGENT:\n                return(\n                    <h6 className=\"mb-0\"><span className='badge bg-warning'>{ task.level }</span></h6>\n                )\n            \n            case LEVELS.BLOCKING:\n                return(\n                    <h6 className=\"mb-0\"><span className='badge bg-danger'>{ task.level }</span></h6>\n                )\n\n            default:   \n                break;\n        }\n    }\n\n    /**\n     * @returns Esta funci贸n devuelve el tipo de icono que se debe mostrar\n     * dependiendo del estado de la tarea { task.completed }\n     */\n     function taskIconCompleted() {\n        if( task.completed ) {\n            return(<i onClick={ () => complete(task) } className='bi-toggle-on task-action' style={ {color: 'green' } }></i>)\n        } else {\n            return(<i onClick={ () => complete(task) } className='bi-toggle-off task-action' style={ {color: 'gray' } }></i>)\n        }\n    }\n\n    const taskCompleted = {\n        color: 'gray',\n        textDecoration: 'line-through'\n    }\n\n    const taskPending = {\n        color: 'tomato',\n        fontWeight: 'normal',\n    }\n\n    return (\n        <div className='task-item'>\n            <h3>{ task.name }</h3>\n            <p>{ task.description }</p>\n            <span>{ taskLevelBadge() }</span>\n            { taskIconCompleted() }\n            <i onClick={ () => remove(task) } className='bi-trash task-action' style={ { color: 'tomato' } }></i>\n        </div>\n                \n    );\n};\n\n\nTask.propTypes = {\n    task: PropTypes.object.isRequired,\n    complete: PropTypes.func.isRequired,\n    remove: PropTypes.func.isRequired,\n};\n\nexport default Task;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,SAASC,MAAT,QAAuB,0BAAvB,C,CAEA;;AACA,OAAO,yBAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAgC;EAAA,IAA/B;IAAEC,IAAF;IAAQC,QAAR;IAAkBC;EAAlB,CAA+B;;EAEzC;AACJ;AACA;AACA;EACK,SAASC,cAAT,GAA0B;IACvB,QAAQH,IAAI,CAACI,KAAb;MACI,KAAKN,MAAM,CAACO,MAAZ;QACI,oBACI;UAAI,SAAS,EAAC,MAAd;UAAA,uBAAqB;YAAM,SAAS,EAAC,kBAAhB;YAAA,UAAqCL,IAAI,CAACI;UAA1C;YAAA;YAAA;YAAA;UAAA;QAArB;UAAA;UAAA;UAAA;QAAA,QADJ;;MAIJ,KAAKN,MAAM,CAACQ,MAAZ;QACI,oBACI;UAAI,SAAS,EAAC,MAAd;UAAA,uBAAqB;YAAM,SAAS,EAAC,kBAAhB;YAAA,UAAqCN,IAAI,CAACI;UAA1C;YAAA;YAAA;YAAA;UAAA;QAArB;UAAA;UAAA;UAAA;QAAA,QADJ;;MAIJ,KAAKN,MAAM,CAACS,QAAZ;QACI,oBACI;UAAI,SAAS,EAAC,MAAd;UAAA,uBAAqB;YAAM,SAAS,EAAC,iBAAhB;YAAA,UAAoCP,IAAI,CAACI;UAAzC;YAAA;YAAA;YAAA;UAAA;QAArB;UAAA;UAAA;UAAA;QAAA,QADJ;;MAIJ;QACI;IAjBR;EAmBH;EAED;AACJ;AACA;AACA;;;EACK,SAASI,iBAAT,GAA6B;IAC1B,IAAIR,IAAI,CAACS,SAAT,EAAqB;MACjB,oBAAO;QAAG,OAAO,EAAG,MAAMR,QAAQ,CAACD,IAAD,CAA3B;QAAoC,SAAS,EAAC,0BAA9C;QAAyE,KAAK,EAAG;UAACU,KAAK,EAAE;QAAR;MAAjF;QAAA;QAAA;QAAA;MAAA,QAAP;IACH,CAFD,MAEO;MACH,oBAAO;QAAG,OAAO,EAAG,MAAMT,QAAQ,CAACD,IAAD,CAA3B;QAAoC,SAAS,EAAC,2BAA9C;QAA0E,KAAK,EAAG;UAACU,KAAK,EAAE;QAAR;MAAlF;QAAA;QAAA;QAAA;MAAA,QAAP;IACH;EACJ;;EAED,MAAMC,aAAa,GAAG;IAClBD,KAAK,EAAE,MADW;IAElBE,cAAc,EAAE;EAFE,CAAtB;EAKA,MAAMC,WAAW,GAAG;IAChBH,KAAK,EAAE,QADS;IAEhBI,UAAU,EAAE;EAFI,CAApB;EAKA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAA,UAAMd,IAAI,CAACe;IAAX;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKf,IAAI,CAACgB;IAAV;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAAQb,cAAc;IAAtB;MAAA;MAAA;MAAA;IAAA,QAHJ,EAIMK,iBAAiB,EAJvB,eAKI;MAAG,OAAO,EAAG,MAAMN,MAAM,CAACF,IAAD,CAAzB;MAAkC,SAAS,EAAC,sBAA5C;MAAmE,KAAK,EAAG;QAAEU,KAAK,EAAE;MAAT;IAA3E;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CA5DD;;KAAMX,I;AA+DNA,IAAI,CAACkB,SAAL,GAAiB;EACbjB,IAAI,EAAEJ,SAAS,CAACsB,MAAV,CAAiBC,UADV;EAEblB,QAAQ,EAAEL,SAAS,CAACwB,IAAV,CAAeD,UAFZ;EAGbjB,MAAM,EAAEN,SAAS,CAACwB,IAAV,CAAeD;AAHV,CAAjB;AAMA,eAAepB,IAAf"},"metadata":{},"sourceType":"module"}
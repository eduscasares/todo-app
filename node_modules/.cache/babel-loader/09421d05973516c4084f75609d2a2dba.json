{"ast":null,"code":"var _jsxFileName = \"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TaskList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Bringin Child Components to Container\n\nimport Task from '../pure/Task';\nimport TaskForm from '../pure/forms/TaskForm'; //Bringing STYLES to Component\n\nimport '../../styles/tasks.scss';\nimport '../../styles/task-form.scss';\nimport '../../styles/global.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskList = () => {\n  _s();\n\n  // Initial State\n  const [tasks, setTasks] = useState([]);\n  const [showForm, setShowForm] = useState(false); // Toggle Form visibility\n\n  const formVisibility = () => {\n    setShowForm(!showForm);\n  }; // A task getting completed \n\n\n  function completeTask(task) {\n    const index = tasks.indexOf(task);\n    const tempTask = [...tasks];\n    tempTask[index].completed = !tempTask[index].completed;\n    setTasks(tempTask);\n  } // A task getting deleted\n\n\n  function deleteTask(task) {\n    const index = tasks.indexOf(task);\n    const tempTask = [...tasks];\n    tempTask.splice(index, 1);\n    setTasks(tempTask);\n  } // A task being added\n\n\n  function addTask(task) {\n    const tempTask = [...tasks];\n    tempTask.push(task);\n    setTasks(tempTask);\n  }\n\n  const TableAll = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks //.filter(task => task.completed === true)\n      .map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          complete: completeTask,\n          remove: deleteTask\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  };\n\n  const TableCompleted = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.filter(task => task.completed === true).map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          complete: completeTask,\n          remove: deleteTask\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  };\n\n  const TablePending = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasks.filter(task => task.completed === false).map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          task: task,\n          complete: completeTask,\n          remove: deleteTask\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }; // FunciÃ³n para filtar tareas \n\n\n  const filterTasks = type => {\n    switch (type) {\n      case 'done':\n        return /*#__PURE__*/_jsxDEV(TableCompleted, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 26\n        }, this);\n\n      case 'pending':\n        return /*#__PURE__*/_jsxDEV(TablePending, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 26\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(TableAll, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 26\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: tasks.length === 0 ? 'card empty' : 'card',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: tasks.length > 0 ? filterTasks('pending') : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"There are no tasks to show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Go on, create one!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"contained-button add-tasks\",\n        onClick: formVisibility,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-plus-square-fill\",\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), \"Add task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      add: addTask,\n      length: tasks.length,\n      tasks: tasks,\n      visibility: showForm,\n      handleClose: formVisibility\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bordered-button\",\n        onClick: () => filterTasks('all'),\n        children: \"See All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bordered-button\",\n        onClick: () => filterTasks('done'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bordered-button\",\n        onClick: () => filterTasks('pending'),\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskList, \"tqWCUR/3t/pgwh75TDAxGLanF+0=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","TaskForm","TaskList","tasks","setTasks","showForm","setShowForm","formVisibility","completeTask","task","index","indexOf","tempTask","completed","deleteTask","splice","addTask","push","TableAll","map","TableCompleted","filter","TablePending","filterTasks","type","length","marginRight"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TaskList.jsx"],"sourcesContent":["import React, { useState } from 'react';\n// Bringin Child Components to Container\nimport Task from '../pure/Task';\nimport TaskForm from '../pure/forms/TaskForm';\n//Bringing STYLES to Component\nimport '../../styles/tasks.scss';\nimport '../../styles/task-form.scss';\nimport '../../styles/global.scss'\n\n\nconst TaskList = () => {\n\n\n    // Initial State\n    const [tasks, setTasks] = useState( [] );\n    const [showForm, setShowForm] = useState(false);\n\n    // Toggle Form visibility\n    const formVisibility = () => {\n        setShowForm(!showForm);\n    }\n\n    // A task getting completed \n    function completeTask(task) {\n        const index = tasks.indexOf(task);\n        const tempTask = [...tasks];\n        tempTask[index].completed = !tempTask[index].completed;\n        setTasks(tempTask);\n    }\n\n    // A task getting deleted\n    function deleteTask(task) {\n        const index = tasks.indexOf(task);\n        const tempTask = [...tasks];\n        tempTask.splice(index, 1);\n        setTasks(tempTask);\n    }\n\n    // A task being added\n    function addTask(task) {\n        const tempTask = [...tasks];\n        tempTask.push(task);\n        setTasks(tempTask);\n    }\n\n    const TableAll = () => {\n        return (\n            <div>\n\n                { tasks\n                    //.filter(task => task.completed === true)\n                    .map((task, index) => {\n                    return(\n                        <Task\n                            task={ task } \n                            key={ index } \n                            complete={ completeTask }\n                            remove={ deleteTask } >\n                        </Task>\n                    )\n                })}\n\n            </div> \n        )\n    }\n\n    const TableCompleted = () => {\n        return (\n            <div>\n\n                { tasks\n                    .filter(task => task.completed === true)\n                    .map((task, index) => {\n                    return(\n                        <Task\n                            task={ task } \n                            key={ index } \n                            complete={ completeTask }\n                            remove={ deleteTask } >\n                        </Task>\n                    )\n                })}\n\n            </div> \n        )\n    }\n\n    const TablePending = () => {\n        return (\n            <div>\n\n                { tasks\n                    .filter(task => task.completed === false)\n                    .map((task, index) => {\n                    return(\n                        <Task\n                            task={ task } \n                            key={ index } \n                            complete={ completeTask }\n                            remove={ deleteTask } >\n                        </Task>\n                    )\n                })}\n\n            </div> \n        )\n    }\n\n    // FunciÃ³n para filtar tareas \n    const filterTasks = (type) => {\n        switch(type) {\n            case 'done':\n                return ( <TableCompleted></TableCompleted> );\n\n            case 'pending':\n                return ( <TablePending></TablePending> );\n\n            default: \n                return ( <TableAll></TableAll>);\n        }\n    }\n\n\n    return (\n        <div className='task-list'>\n            <div className={ tasks.length === 0 ? 'card empty' : 'card' }>\n\n                <div className=\"card-body\">\n                    { \n                    \n                        tasks.length > 0 ?\n\n                        filterTasks('pending') :\n\n                        (\n                            <div className='task-table'>\n                                <h3>There are no tasks to show</h3>\n                                <p>Go on, create one!</p>\n                            </div>\n                        )\n                               \n                    }\n\n                </div>\n\n                <button className='contained-button add-tasks' onClick={ formVisibility }>\n                    <i className=\"bi bi-plus-square-fill\" style={{marginRight: '8px'}}></i>\n                    Add task\n                </button>\n\n            </div>\n                \n            <TaskForm \n                add = { addTask } \n                length = { tasks.length } \n                tasks = { tasks } \n                visibility= { showForm }\n                handleClose = { formVisibility }>\n            </TaskForm>\n\n            <div className=\"filter-buttons\">\n                <button className=\"bordered-button\" onClick={ () => filterTasks('all') }>\n                    See All\n                </button>\n\n                <button className=\"bordered-button\" onClick={ () => filterTasks('done') }>\n                    Completed\n                </button>\n\n                <button className=\"bordered-button\" onClick={ () => filterTasks('pending') }>\n                    Pending\n                </button>\n            </div>\n        </div>\n    );\n};\n\n \nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
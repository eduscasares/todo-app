{"ast":null,"code":"var _jsxFileName = \"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TLWR.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/React.createContext(null);\nconst initialState = {\n  id: '',\n  title: '',\n  description: '',\n  isCompleted: false\n};\n\nconst TLWR = () => {\n  _s();\n\n  const titleRef = useRef();\n  const descriptionRef = useRef();\n  const [tasks, dispatch] = useReducer(function () {\n    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      case 'ADD_TASK':\n        return [...state, {\n          id: state.length,\n          title: action.title,\n          description: action.description\n        }];\n\n      case 'REMOVE_TASK':\n        return state.filter((task, index) => index !== action.index);\n\n      default:\n        return state;\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'ADD_TASK',\n      title: titleRef.current.value,\n      description: descriptionRef.current.value\n    });\n    titleRef.current.value = '';\n    descriptionRef.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: tasks,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Name your new task\",\n        ref: titleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        ref: descriptionRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: tasks && tasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch({\n              type: 'REMOVE_TASK',\n              index\n            }),\n            children: \"Borrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TLWR, \"Emclmn3+2od9chaHwYA1exg2hv8=\");\n\n_c = TLWR;\nexport default TLWR;\n\nvar _c;\n\n$RefreshReg$(_c, \"TLWR\");","map":{"version":3,"names":["React","useReducer","useRef","TaskContext","createContext","initialState","id","title","description","isCompleted","TLWR","titleRef","descriptionRef","tasks","dispatch","state","action","type","length","filter","task","index","handleSubmit","e","preventDefault","current","value","display","flexDirection","map"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TLWR.jsx"],"sourcesContent":["import React, { useReducer, useRef } from 'react';\n\nconst TaskContext = React.createContext(null);\n\nconst initialState = {\n    id: '',\n    title: '',\n    description: '',\n    isCompleted: false,\n}\n\nconst TLWR = () => {\n\n    const titleRef = useRef();\n    const descriptionRef = useRef();\n\n    const [tasks, dispatch] = useReducer((state = [], action) => {\n\n        switch (action.type) {\n            case 'ADD_TASK':\n                return [\n                    ...state, \n                    {   \n                        id: state.length, \n                        title: action.title,\n                        description: action.description\n                    }\n                ]\n\n            case 'REMOVE_TASK':\n                return state.filter((task, index) => index !== action.index);\n\n            default:\n                return state;\n        }\n\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        dispatch({\n            type: 'ADD_TASK',\n            title: titleRef.current.value,\n            description: descriptionRef.current.value\n        })\n\n        titleRef.current.value = '';\n        descriptionRef.current.value = '';\n    }\n\n    return (\n        <TaskContext.Provider value={ tasks }>\n\n            <h1>Lista de tareas</h1>\n\n            <form onSubmit={ handleSubmit }>\n                <label htmlFor=\"title\">Task</label>\n                <input type=\"text\" name='title' placeholder='Name your new task' ref={ titleRef } />\n                <label htmlFor=\"description\">Description</label>\n                <input type=\"text\" name=\"description\" id=\"description\" ref={ descriptionRef } />\n                <button type=\"submit\">Add task</button>\n            </form>\n\n            <div className=\"tasks\" style={{ display: 'flex', flexDirection: 'column'}}>\n                {\n                    tasks && tasks.map((task, index) => {\n                        return (\n                            <div className=\"task\" key={ index}>\n                                <p>{ task.title }</p><br></br>\n                                <span>{ task.description }</span>\n                                <button onClick={ () => dispatch({ type: 'REMOVE_TASK', index })}>\n                                    Borrar\n                                </button>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n\n        </TaskContext.Provider>\n    );\n}\n\nexport default TLWR;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
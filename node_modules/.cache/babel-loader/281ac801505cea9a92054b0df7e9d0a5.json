{"ast":null,"code":"var _jsxFileName = \"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TLWR.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useRef } from 'react';\nimport { initialState, reducer } from '../../reducers/task.reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/React.createContext(null);\n\nconst TLWR = () => {\n  _s();\n\n  // Iniciamos las referencias para controlar los datos\n  const titleRef = useRef();\n  const descriptionRef = useRef(); // Iniciamos useReducer\n\n  const [tasks, dispatch] = useReducer(reducer, initialState); // Función para enviar tareas\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch({\n      type: 'ADD_TASK',\n      title: titleRef.current.value,\n      description: descriptionRef.current.value\n    });\n    titleRef.current.value = '';\n    descriptionRef.current.value = '';\n  }; // Función para actualizar el completado\n\n\n  const handleComplete = task => {\n    dispatch({\n      type: 'COMPLETE_TASK',\n      id: task.id\n    });\n  }; // Función para filtar tareas \n\n\n  const filterTasks = type => {\n    switch (type) {\n      case 'done':\n        console.log('Intentas mostrar completadas');\n        return tasks.filter(task => task.isCompleted);\n\n      case 'pending':\n        console.log('Intentas mostrar pendientes');\n        return tasks.filter(task => !task.isCompleted);\n\n      default:\n        console.log('Intentas mostrar todas las tareas');\n        return tasks;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: tasks,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Name your new task\",\n        ref: titleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        ref: descriptionRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: tasks && tasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.isCompleted ? 'Tarea completada' : 'Tarea pendiente'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch({\n              type: 'REMOVE_TASK',\n              index\n            }),\n            children: \"Borrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleComplete(task),\n            children: task.isCompleted ? 'Desmarcar completa' : 'Completar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => filterTasks('done'),\n      children: \"Mostrar tareas completadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => filterTasks('pending'),\n      children: \"Mostrar tareas pendientes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => filterTasks('todas'),\n      children: \"Mostrar todas las tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TLWR, \"QAxVT/cx7xakRXl8w7GYzg783oQ=\");\n\n_c = TLWR;\nexport default TLWR;\n\nvar _c;\n\n$RefreshReg$(_c, \"TLWR\");","map":{"version":3,"names":["React","useReducer","useRef","initialState","reducer","TaskContext","createContext","TLWR","titleRef","descriptionRef","tasks","dispatch","handleSubmit","e","preventDefault","type","title","current","value","description","handleComplete","task","id","filterTasks","console","log","filter","isCompleted","display","flexDirection","map","index"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TLWR.jsx"],"sourcesContent":["import React, { useReducer, useRef } from 'react';\nimport { initialState, reducer } from '../../reducers/task.reducer';\n\nconst TaskContext = React.createContext(null);\n\nconst TLWR = () => {\n\n    // Iniciamos las referencias para controlar los datos\n    const titleRef = useRef();\n    const descriptionRef = useRef();\n\n    // Iniciamos useReducer\n    const [tasks, dispatch] = useReducer(reducer, initialState);\n\n    // Función para enviar tareas\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        dispatch({\n            type: 'ADD_TASK',\n            title: titleRef.current.value,\n            description: descriptionRef.current.value\n        })\n\n        titleRef.current.value = '';\n        descriptionRef.current.value = '';\n    }\n\n    // Función para actualizar el completado\n    const handleComplete = (task) => {\n        dispatch({type:'COMPLETE_TASK', id: task.id})\n    }\n\n    // Función para filtar tareas \n    const filterTasks = (type) => {\n        switch(type) {\n            case 'done':\n                console.log('Intentas mostrar completadas')\n                return tasks.filter(task=> task.isCompleted);\n\n            case 'pending':\n                console.log('Intentas mostrar pendientes')\n                return tasks.filter(task => !task.isCompleted);\n\n            default: \n                console.log('Intentas mostrar todas las tareas')\n                return tasks;\n        }\n    }\n\n\n    return (\n        <TaskContext.Provider value={ tasks }>\n\n            <h1>Lista de tareas</h1>\n\n            <form onSubmit={ handleSubmit }>\n                <label htmlFor=\"title\">Task</label>\n                <input type=\"text\" name='title' placeholder='Name your new task' ref={ titleRef } />\n                <label htmlFor=\"description\">Description</label>\n                <input type=\"text\" name=\"description\" id=\"description\" ref={ descriptionRef } />\n                <button type=\"submit\">Add task</button>\n            </form>\n\n            <div className=\"tasks\" style={{ display: 'flex', flexDirection: 'column'}}>\n                {\n                    tasks && tasks.map((task, index) => {\n                        return (\n                            <div className=\"task\" key={ index }>\n\n                                <p>{ task.title }</p><br></br>\n\n                                <span>{ task.description }</span>\n\n                                <p>{ task.isCompleted ? 'Tarea completada' : 'Tarea pendiente' }</p>\n\n                                <button onClick={ () => dispatch({ type: 'REMOVE_TASK', index })}>\n                                    Borrar\n                                </button>\n\n                                <button onClick={ () => handleComplete(task)}>\n                                    { task.isCompleted ? 'Desmarcar completa' : 'Completar'}\n                                </button>\n\n                            </div>\n                        )\n                    })\n                }\n            </div>\n\n            <button onClick={ () => filterTasks('done') }>\n                Mostrar tareas completadas\n            </button>\n\n            <button onClick={ () => filterTasks('pending') }>\n                Mostrar tareas pendientes\n            </button>\n\n            <button onClick={ () => filterTasks('todas') }>\n                Mostrar todas las tareas\n            </button>\n\n        </TaskContext.Provider>\n    );\n}\n\nexport default TLWR;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
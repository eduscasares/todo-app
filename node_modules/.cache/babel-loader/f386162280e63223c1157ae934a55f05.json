{"ast":null,"code":"var _jsxFileName = \"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TaskListWithContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useReducer } from 'react';\nimport Task from '../pure/Task'; // Actions\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_TASK = 'ADD_TASK';\nconst REMOVE_TASK = 'REMOVE_TASK'; // Context\n\nconst TaskListContext = /*#__PURE__*/React.createContext(null); // Component\n\nconst TaskListWithContext = () => {\n  _s();\n\n  const initialState = {\n    tasks: [],\n    isCompleted: false\n  }; // Reducer\n\n  const taskReducer = (state, action) => {\n    switch (action.type) {\n      case ADD_TASK:\n        return { ...state,\n          tasks: state.tasks.concat(Task)\n        };\n\n      case REMOVE_TASK:\n        console.log('REMOVE_TASK');\n        break;\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(TaskListContext.Provider, {\n    value: state,\n    children: [state.tasks.length !== 0 ? state.tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(Task, {\n        complete: state.isCompleted,\n        task: task\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There aren't tasks to show, well done!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        dispatch({\n          type: ADD_TASK\n        });\n      },\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskListWithContext, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskListWithContext;\nexport default TaskListWithContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListWithContext\");","map":{"version":3,"names":["React","useContext","useReducer","Task","ADD_TASK","REMOVE_TASK","TaskListContext","createContext","TaskListWithContext","initialState","tasks","isCompleted","taskReducer","state","action","type","concat","console","log","dispatch","length","map","task","index"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/containers/TaskListWithContext.jsx"],"sourcesContent":["import React, { useContext, useReducer } from 'react';\nimport Task from '../pure/Task';\n\n// Actions\nconst ADD_TASK = 'ADD_TASK';\nconst REMOVE_TASK = 'REMOVE_TASK';\n\n\n// Context\nconst TaskListContext = React.createContext(null);\n\n\n// Component\nconst TaskListWithContext = () => {\n\n    const initialState = {\n        tasks: [],\n        isCompleted: false,\n    }\n\n    // Reducer\n    const taskReducer = (state, action) => {\n\n        switch (action.type) {\n\n            case ADD_TASK:\n                return {\n                    ...state,\n                    tasks: state.tasks.concat(Task),\n                }\n\n            case REMOVE_TASK:\n                console.log('REMOVE_TASK');\n                break;\n\n            default: \n                return state;\n\n        }\n\n    }\n\n\n    const [state, dispatch] = useReducer(taskReducer, initialState)\n\n    return (\n        <TaskListContext.Provider value={ state }>\n\n            {\n\n                state.tasks.length !== 0 \n                \n                ?\n                \n                state.tasks.map((task, index) => {\n                    return (\n                        <Task \n                            key={ index }\n                            complete={ state.isCompleted }\n                            task={ task } \n                        />\n                    )\n                }) \n\n                :\n\n                <p>There aren't tasks to show, well done!</p>\n\n            }\n\n            <button onClick={ () => {\n                dispatch({\n                    type: ADD_TASK\n                })\n            }}>\n                Add Task\n            </button>\n\n        </TaskListContext.Provider>\n    );\n}\n\nexport default TaskListWithContext;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,IAAP,MAAiB,cAAjB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB,C,CAGA;;AACA,MAAMC,eAAe,gBAAGN,KAAK,CAACO,aAAN,CAAoB,IAApB,CAAxB,C,CAGA;;AACA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAE9B,MAAMC,YAAY,GAAG;IACjBC,KAAK,EAAE,EADU;IAEjBC,WAAW,EAAE;EAFI,CAArB,CAF8B,CAO9B;;EACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;IAEnC,QAAQA,MAAM,CAACC,IAAf;MAEI,KAAKX,QAAL;QACI,OAAO,EACH,GAAGS,KADA;UAEHH,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYM,MAAZ,CAAmBb,IAAnB;QAFJ,CAAP;;MAKJ,KAAKE,WAAL;QACIY,OAAO,CAACC,GAAR,CAAY,aAAZ;QACA;;MAEJ;QACI,OAAOL,KAAP;IAbR;EAiBH,CAnBD;;EAsBA,MAAM,CAACA,KAAD,EAAQM,QAAR,IAAoBjB,UAAU,CAACU,WAAD,EAAcH,YAAd,CAApC;EAEA,oBACI,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAGI,KAAlC;IAAA,WAIQA,KAAK,CAACH,KAAN,CAAYU,MAAZ,KAAuB,CAAvB,GAIAP,KAAK,CAACH,KAAN,CAAYW,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;MAC7B,oBACI,QAAC,IAAD;QAEI,QAAQ,EAAGV,KAAK,CAACF,WAFrB;QAGI,IAAI,EAAGW;MAHX,GACUC,KADV;QAAA;QAAA;QAAA;MAAA,QADJ;IAOH,CARD,CAJA,gBAgBA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBR,eAwBI;MAAQ,OAAO,EAAG,MAAM;QACpBJ,QAAQ,CAAC;UACLJ,IAAI,EAAEX;QADD,CAAD,CAAR;MAGH,CAJD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmCH,CAnED;;GAAMI,mB;;KAAAA,mB;AAqEN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from'react';//Bringing MODELS to component\nimport{LEVELS}from'../../models/levels.enum';//Bringing STYLES to Component\nimport'../../styles/tasks.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Task=function Task(_ref){var task=_ref.task,complete=_ref.complete,remove=_ref.remove;/**\n     * @return La idea es que la funci贸n retorne un badge \n     * dependiendo del nivel de prioridad de la task\n     */function taskLevelBadge(){switch(task.level){case LEVELS.NORMAL:return/*#__PURE__*/_jsx(\"h6\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"badge normal\",children:task.level})});case LEVELS.URGENT:return/*#__PURE__*/_jsx(\"h6\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"badge warning\",children:task.level})});case LEVELS.BLOCKING:return/*#__PURE__*/_jsx(\"h6\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"span\",{className:\"badge danger\",children:task.level})});default:break;}}/**\n     * @returns Esta funci贸n devuelve el tipo de icono que se debe mostrar\n     * dependiendo del estado de la tarea { task.completed }\n     */function taskIconCompleted(){if(task.completed){return/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(){return complete(task);},className:\"bi-toggle-on task-action\",style:{color:'green'}});}else{return/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(){return complete(task);},className:\"bi-toggle-off task-action\",style:{color:'gray'}});}}return/*#__PURE__*/_jsxs(\"div\",{className:\"task-item\",style:task.completed?{opacity:'0.4'}:{opacity:'1'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:task.name}),/*#__PURE__*/_jsx(\"span\",{className:\"task-level\",children:taskLevelBadge()})]}),/*#__PURE__*/_jsx(\"p\",{children:task.description}),/*#__PURE__*/_jsx(\"span\",{className:\"task-complete\",children:taskIconCompleted()}),/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(){return remove(task);},className:\"bi-trash task-action\",style:{color:'tomato'}})]});};export default Task;","map":{"version":3,"names":["React","LEVELS","Task","task","complete","remove","taskLevelBadge","level","NORMAL","URGENT","BLOCKING","taskIconCompleted","completed","color","opacity","display","alignItems","gap","name","description"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/todo-app/src/components/pure/Task.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n  \n//Bringing MODELS to component\nimport { LEVELS } from '../../models/levels.enum';\n\n//Bringing STYLES to Component\nimport '../../styles/tasks.scss'\n \nconst Task = ({ task, complete, remove }) => {\n\n    /**\n     * @return La idea es que la funci贸n retorne un badge \n     * dependiendo del nivel de prioridad de la task\n     */\n     function taskLevelBadge() {\n        switch (task.level) {\n            case LEVELS.NORMAL:\n                return(\n                    <h6 className=\"mb-0\"><span className='badge normal'>{ task.level }</span></h6>\n                )\n        \n            case LEVELS.URGENT:\n                return(\n                    <h6 className=\"mb-0\"><span className='badge warning'>{ task.level }</span></h6>\n                )\n            \n            case LEVELS.BLOCKING:\n                return(\n                    <h6 className=\"mb-0\"><span className='badge danger'>{ task.level }</span></h6>\n                )\n\n            default:   \n                break;\n        }\n    }\n\n    /**\n     * @returns Esta funci贸n devuelve el tipo de icono que se debe mostrar\n     * dependiendo del estado de la tarea { task.completed }\n     */\n     function taskIconCompleted() {\n        if( task.completed ) {\n            return(<i onClick={ () => complete(task) } className='bi-toggle-on task-action' style={ {color: 'green' } }></i>)\n        } else {\n            return(<i onClick={ () => complete(task) } className='bi-toggle-off task-action' style={ {color: 'gray' } }></i>)\n        }\n    }\n\n    return (\n        <div className='task-item' style={ task.completed ? { opacity: '0.4' } : { opacity: '1' } }>\n            <div style={{display: 'flex', alignItems: 'center', gap: '20px'}}>\n                <h3>{ task.name }</h3>\n                <span className='task-level'>{ taskLevelBadge() }</span>\n            </div>\n            <p>{ task.description }</p>\n            <span className='task-complete'>{ taskIconCompleted() }</span>\n            <i onClick={ () => remove(task) } className='bi-trash task-action' style={ { color: 'tomato' } }></i>\n        </div>\n                \n    );\n};\n\n\nTask.propTypes = {\n    task: PropTypes.object.isRequired,\n    complete: PropTypes.func.isRequired,\n    remove: PropTypes.func.isRequired,\n};\n\nexport default Task;\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAGA;AACA,OAASC,MAAT,KAAuB,0BAAvB,CAEA;AACA,MAAO,yBAAP,C,wFAEA,GAAMC,KAAI,CAAG,QAAPA,KAAO,MAAgC,IAA7BC,KAA6B,MAA7BA,IAA6B,CAAvBC,QAAuB,MAAvBA,QAAuB,CAAbC,MAAa,MAAbA,MAAa,CAEzC;AACJ;AACA;AACA,OACK,QAASC,eAAT,EAA0B,CACvB,OAAQH,IAAI,CAACI,KAAb,EACI,IAAKN,OAAM,CAACO,MAAZ,CACI,mBACI,WAAI,SAAS,CAAC,MAAd,uBAAqB,aAAM,SAAS,CAAC,cAAhB,UAAiCL,IAAI,CAACI,KAAtC,EAArB,EADJ,CAIJ,IAAKN,OAAM,CAACQ,MAAZ,CACI,mBACI,WAAI,SAAS,CAAC,MAAd,uBAAqB,aAAM,SAAS,CAAC,eAAhB,UAAkCN,IAAI,CAACI,KAAvC,EAArB,EADJ,CAIJ,IAAKN,OAAM,CAACS,QAAZ,CACI,mBACI,WAAI,SAAS,CAAC,MAAd,uBAAqB,aAAM,SAAS,CAAC,cAAhB,UAAiCP,IAAI,CAACI,KAAtC,EAArB,EADJ,CAIJ,QACI,MAjBR,CAmBH,CAED;AACJ;AACA;AACA,OACK,QAASI,kBAAT,EAA6B,CAC1B,GAAIR,IAAI,CAACS,SAAT,CAAqB,CACjB,mBAAO,UAAG,OAAO,CAAG,yBAAMR,SAAQ,CAACD,IAAD,CAAd,EAAb,CAAoC,SAAS,CAAC,0BAA9C,CAAyE,KAAK,CAAG,CAACU,KAAK,CAAE,OAAR,CAAjF,EAAP,CACH,CAFD,IAEO,CACH,mBAAO,UAAG,OAAO,CAAG,yBAAMT,SAAQ,CAACD,IAAD,CAAd,EAAb,CAAoC,SAAS,CAAC,2BAA9C,CAA0E,KAAK,CAAG,CAACU,KAAK,CAAE,MAAR,CAAlF,EAAP,CACH,CACJ,CAED,mBACI,aAAK,SAAS,CAAC,WAAf,CAA2B,KAAK,CAAGV,IAAI,CAACS,SAAL,CAAiB,CAAEE,OAAO,CAAE,KAAX,CAAjB,CAAsC,CAAEA,OAAO,CAAE,GAAX,CAAzE,wBACI,aAAK,KAAK,CAAE,CAACC,OAAO,CAAE,MAAV,CAAkBC,UAAU,CAAE,QAA9B,CAAwCC,GAAG,CAAE,MAA7C,CAAZ,wBACI,oBAAMd,IAAI,CAACe,IAAX,EADJ,cAEI,aAAM,SAAS,CAAC,YAAhB,UAA+BZ,cAAc,EAA7C,EAFJ,GADJ,cAKI,mBAAKH,IAAI,CAACgB,WAAV,EALJ,cAMI,aAAM,SAAS,CAAC,eAAhB,UAAkCR,iBAAiB,EAAnD,EANJ,cAOI,UAAG,OAAO,CAAG,yBAAMN,OAAM,CAACF,IAAD,CAAZ,EAAb,CAAkC,SAAS,CAAC,sBAA5C,CAAmE,KAAK,CAAG,CAAEU,KAAK,CAAE,QAAT,CAA3E,EAPJ,GADJ,CAYH,CApDD,CA6DA,cAAeX,KAAf"},"metadata":{},"sourceType":"module"}
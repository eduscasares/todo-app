{"ast":null,"code":"var _jsxFileName = \"/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/pure/forms/TaskForm.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // Importing MODELS \n\nimport { Task } from '../../../models/taskModel.class';\nimport { LEVELS } from '../../../models/levels.enum'; // Importing Formik and Yup\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskForm = _ref => {\n  let {\n    add,\n    length,\n    visibility,\n    handleClose\n  } = _ref;\n  // Setting Form initial values\n  const initialValues = {\n    name: '',\n    description: '',\n    level: LEVELS.NORMAL,\n    completed: false\n  }; // Setting Form validation\n\n  const addTaskSchema = Yup.object().shape({\n    name: Yup.string().required('This field is required, please fill it'),\n    description: Yup.string().required('This field is required, please fill it'),\n    level: Yup.string().oneOf([LEVELS.NORMAL, LEVELS.URGENT, LEVELS.BLOCKING])\n  }); // Functionality to add task\n\n  function addTask(tasks) {\n    const newTask = tasks;\n    add(newTask);\n    handleClose();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: visibility === true ? 'form-container' : 'form-container hidden',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-x-circle-fill\",\n        onClick: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: addTaskSchema,\n        onSubmit: (values, actions) => {\n          addTask(values);\n          actions.resetForm({});\n          actions.setSubmitting(false);\n        },\n        children: _ref2 => {\n          let {\n            errors,\n            touched,\n            isSubmitting\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"name\",\n              name: \"name\",\n              placeholder: \"Add a task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), errors.name && touched.name && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"description\",\n              name: \"description\",\n              placeholder: \"Add a task description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this), errors.description && touched.description && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"level\",\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              id: \"level\",\n              name: \"level\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: LEVELS.NORMAL,\n                children: \"Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: LEVELS.URGENT,\n                children: \"Urgent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: LEVELS.BLOCKING,\n                children: \"Blocking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"contained-button\",\n              children: length === 0 ? 'Create your first task' : 'Add a new task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), isSubmitting ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Be patient, we're adding your task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 51\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TaskForm;\nTaskForm.ProtoTypes = {\n  tasks: PropTypes.instanceOf(Task),\n  add: PropTypes.func.isRequired,\n  length: PropTypes.number.isRequired\n};\nexport default TaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","PropTypes","Task","LEVELS","Formik","Form","Field","ErrorMessage","Yup","TaskForm","add","length","visibility","handleClose","initialValues","name","description","level","NORMAL","completed","addTaskSchema","object","shape","string","required","oneOf","URGENT","BLOCKING","addTask","tasks","newTask","values","actions","resetForm","setSubmitting","errors","touched","isSubmitting","ProtoTypes","instanceOf","func","isRequired","number"],"sources":["/Users/eduardosanchez/Projects/open-bootcamp/ReactJS/redux-todo-app/src/components/pure/forms/TaskForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Importing MODELS \nimport { Task } from '../../../models/taskModel.class';\nimport { LEVELS } from '../../../models/levels.enum';\n\n// Importing Formik and Yup\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst TaskForm = ({ add, length, visibility, handleClose }) => {\n\n    // Setting Form initial values\n    const initialValues = {\n        name: '',\n        description: '',\n        level: LEVELS.NORMAL,\n        completed: false\n    }\n\n    // Setting Form validation\n    const addTaskSchema = Yup.object().shape(\n        {\n            name: Yup.string()\n                .required('This field is required, please fill it'),\n            description: Yup.string()\n                .required('This field is required, please fill it'),\n            level: Yup.string().oneOf(\n                [LEVELS.NORMAL, LEVELS.URGENT, LEVELS.BLOCKING]\n            ),\n        }\n    )\n\n    // Functionality to add task\n\n    function addTask(tasks) {\n        const newTask = tasks;\n        add(newTask);\n        handleClose();\n    }\n\n    \n    return (\n        <div className={ visibility === true ? 'form-container' : 'form-container hidden'}>\n            <div className='task-form'>\n                <i className=\"bi bi-x-circle-fill\" onClick={ handleClose }></i>\n                <h4>Add a new task</h4>\n\n                <Formik\n                    initialValues = { initialValues }\n                    validationSchema = { addTaskSchema }\n                    onSubmit = { (values, actions) => {\n                        addTask(values);\n                        actions.resetForm({});\n                        actions.setSubmitting(false);\n                    } }\n                >\n\n                    {({ errors,\n                        touched, \n                        isSubmitting }) => (\n\n                            <Form>\n\n                                <label htmlFor=\"name\">Name</label>\n                                <Field type=\"text\" id=\"name\" name=\"name\" placeholder=\"Add a task name\"></Field>\n                                {/* Setting Field Errors */}\n                                    {\n\n                                        errors.name && touched.name &&\n                                        (\n                                            <ErrorMessage name=\"name\" component=\"div\" />\n                                        )\n\n                                    }\n\n                                <label htmlFor=\"description\">Description</label>\n                                <Field type=\"text\" id=\"description\" name=\"description\" placeholder=\"Add a task description\"></Field>\n                                {/* Setting Field Errors */}\n                                    {\n\n                                        errors.description && touched.description &&\n                                        (\n                                            <ErrorMessage name='description' component='div'></ErrorMessage>\n                                        )\n\n                                    }\n\n                                <label htmlFor=\"level\">Priority</label>\n                                <Field as='select' id=\"level\" name=\"level\">\n                                    <option value={ LEVELS.NORMAL }>Normal</option>\n                                    <option value={ LEVELS.URGENT }>Urgent</option>\n                                    <option value={ LEVELS.BLOCKING }>Blocking</option>\n                                </Field>\n\n                                <button type=\"submit\" className='contained-button'>\n                                    { length === 0 ? 'Create your first task' : 'Add a new task'}\n                                </button>\n\n                                { isSubmitting ? (<p>Be patient, we're adding your task</p>) : null }\n\n                            </Form>\n\n                        )\n                    }\n\n\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\nTaskForm.ProtoTypes = {\n    tasks: PropTypes.instanceOf(Task),\n    add: PropTypes.func.isRequired,\n    length: PropTypes.number.isRequired,\n}\n\nexport default TaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}